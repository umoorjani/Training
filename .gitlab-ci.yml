stages:
  - test
  - scan
  - sign
  - deploy

variables:
  KUBECONFIG: /tmp/kubeconfig

before_script:
  - apk add --no-cache curl bash git python3 py3-pip docker-cli kubectl

# ============ SAST ============
semgrep:
  stage: scan
  script:
    - curl -L https://semgrep.dev/install.sh | sh
    - ~/.local/bin/semgrep scan --config auto --json -o semgrep-report.json
  artifacts:
    paths: [semgrep-report.json]
    when: always

# ============ SCA & Container Scan ============
trivy:
  stage: scan
  script:
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
    - trivy image --exit-code 1 --severity CRITICAL,HIGH --format json -o trivy-report.json bkimminich/juice-shop:latest
  artifacts:
    paths: [trivy-report.json]
    when: always

# ============ DAST ============
zap:
  stage: test
  script:
    - mkdir -p /zap/wrk
    - docker run --rm -v $(pwd):/zap/wrk owasp/zap2docker-stable zap-baseline.py -t http://juice-shop.apps.svc.cluster.local:3000 -j -r zap-report.json
  artifacts:
    paths: [zap-report.json]
    when: always

# ============ Sign Image with Cosign ============
cosign-sign:
  stage: sign
  script:
    - curl -L https://github.com/sigstore/cosign/releases/download/v2.2.4/cosign-linux-amd64 -o /usr/local/bin/cosign
    - chmod +x /usr/local/bin/cosign
    - cosign generate-key-pair
    - cosign sign --key cosign.key bkimminich/juice-shop:latest
  when: manual

# ============ DÃ©ployer sur k3s (si scan OK) ===========
deploy:
  stage: deploy
  script:
    - mkdir -p /root/.kube
    - kubectl config view --raw > $KUBECONFIG
    - kubectl apply -f https://raw.githubusercontent.com/bkimminich/juice-shop/master/kubernetes/juice-shop.yaml -n apps
  rules:
    - if: $CI_COMMIT_BRANCH == "main"